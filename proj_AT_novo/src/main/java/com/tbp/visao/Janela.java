package com.tbp.visao;

import com.tbp.exception.CotacaoInvalidaException;
import com.tbp.exception.ProdutoInvalidoException;
import com.tbp.validation.ProdutoValidation;
import com.tbp.repository.*;
import com.tbp.model.*;
import com.tbp.validation.CotacaoValidacao;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Component;

@Component
public class Janela extends javax.swing.JFrame {

    @Autowired
    private ProdutoRepository produtoRepository;
    @Autowired
    private CotacaoRepository cotacaoRepository;
    @Autowired
    private CotacaoProdutoRepository cotacaoProdutoRepository;

    private final boolean MODO_CADASTRO = true;
    private final boolean MODO_LISTAGEM = false;

    private final int TAB_PRODUTO = 0;
    private final int TAB_CATACO = 1;

    private ProdutoValidation produtoValidation;
    private CotacaoValidacao cotacaoValidation;

    private List<Cotacao> dataSourceCotacoes;
    private List<Produto> dataSourceProdutos;
    private List<CotacaoProduto> dataSourceCotacaoProduto;

    private CotacaoProduto cotacaoProduto;

    public Janela() throws ParseException {
        initComponents();

        this.produtoValidation = new ProdutoValidation();
        this.cotacaoValidation = new CotacaoValidacao();

        preencherTableProdutos(null);
        preencherTableCotacao(null);
        preencherTableCotacaoProduto(null);

        jtabPrincipal.setSelectedIndex(0);
        jtabProdutos.setSelectedIndex(0);
        jtabCotacao.setSelectedIndex(0);

        jcbSituacao.removeAllItems();
        jcbSituacao.addItem("Ativo");
        jcbSituacao.addItem("Inativo");

        MaskFormatter maskData = new MaskFormatter("##/##/####");
        maskData.install(jtxtCotacaoValidade);

        NumberFormat amountFormat = NumberFormat.getCurrencyInstance();

        modificarEstado(MODO_LISTAGEM);

        carregarFornecedores();

        editarCotacaoProduto();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jtabPrincipal = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jtabProdutos = new javax.swing.JTabbedPane();
        jpnlProdutoListagem = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jtxtPesquisaProduto = new javax.swing.JTextField();
        jbtnExportacao = new javax.swing.JButton();
        jbtnPesquisarProduto = new javax.swing.JButton();
        jcbPesquisaProduto = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblProdutos = new javax.swing.JTable();
        jpnlProdutoCadastro = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jtxtCodigo = new javax.swing.JTextField();
        jtxtDescricao = new javax.swing.JTextField();
        jcbSituacao = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jtabCotacao = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblCotacao = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jcbPesquisaCotacao = new javax.swing.JComboBox<>();
        jtxtPesquisaCotacao = new javax.swing.JTextField();
        jbtnPesquisarCotacao = new javax.swing.JButton();
        jbtnExportarCotacao = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jtxtCotacaoCodigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxtCotacaoValidade = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jcbCotacaoFornecedor = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jtxtCotacaoTotal = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jcbCotacaoProdutos = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jtxtCotacaoValorProduto = new javax.swing.JFormattedTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblCotacaoProduto = new javax.swing.JTable();
        jbtnIncluirProduto = new javax.swing.JButton();
        jbtnExcluirProduto = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jbtnNovo = new javax.swing.JButton();
        jbtnEditar = new javax.swing.JButton();
        jbtnSalvar = new javax.swing.JButton();
        jbtnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(51, 153, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Captura de tela 2021-03-25 212354.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Cotações");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jtabPrincipal.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jtabPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtabPrincipalMouseClicked(evt);
            }
        });

        jtabProdutos.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        jPanel10.setForeground(new java.awt.Color(153, 153, 153));

        jbtnExportacao.setText("Exportar");
        jbtnExportacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExportacaoActionPerformed(evt);
            }
        });

        jbtnPesquisarProduto.setText("Pesquisar");
        jbtnPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPesquisarProdutoActionPerformed(evt);
            }
        });

        jcbPesquisaProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Descrição", "Situação" }));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtPesquisaProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnPesquisarProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnExportacao)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnExportacao)
                    .addComponent(jbtnPesquisarProduto)
                    .addComponent(jcbPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jtblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Descrição", "Situação"
            }
        ));
        jtblProdutos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jtblProdutos);

        javax.swing.GroupLayout jpnlProdutoListagemLayout = new javax.swing.GroupLayout(jpnlProdutoListagem);
        jpnlProdutoListagem.setLayout(jpnlProdutoListagemLayout);
        jpnlProdutoListagemLayout.setHorizontalGroup(
            jpnlProdutoListagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProdutoListagemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlProdutoListagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpnlProdutoListagemLayout.setVerticalGroup(
            jpnlProdutoListagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProdutoListagemLayout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtabProdutos.addTab("Listagem", jpnlProdutoListagem);

        jLabel3.setText("Situação");

        jLabel2.setText("Descrição");

        jLabel1.setText("Código");

        jtxtCodigo.setEditable(false);

        jcbSituacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jpnlProdutoCadastroLayout = new javax.swing.GroupLayout(jpnlProdutoCadastro);
        jpnlProdutoCadastro.setLayout(jpnlProdutoCadastroLayout);
        jpnlProdutoCadastroLayout.setHorizontalGroup(
            jpnlProdutoCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProdutoCadastroLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jpnlProdutoCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jpnlProdutoCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtCodigo)
                    .addComponent(jtxtDescricao)
                    .addComponent(jcbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        jpnlProdutoCadastroLayout.setVerticalGroup(
            jpnlProdutoCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlProdutoCadastroLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jpnlProdutoCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jpnlProdutoCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jpnlProdutoCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(303, Short.MAX_VALUE))
        );

        jtabProdutos.addTab("Cadastro", jpnlProdutoCadastro);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabProdutos)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtabProdutos))
        );

        jtabPrincipal.addTab("Produtos", jPanel2);

        jtabCotacao.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jtabCotacao.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtabCotacaoStateChanged(evt);
            }
        });

        jtblCotacao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Fornecedor", "Data", "Validade", "Valor"
            }
        ));
        jtblCotacao.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jtblCotacao);

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jcbPesquisaCotacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Fornecedor" }));

        jbtnPesquisarCotacao.setText("Pesquisar");
        jbtnPesquisarCotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPesquisarCotacaoActionPerformed(evt);
            }
        });

        jbtnExportarCotacao.setText("Exportar");
        jbtnExportarCotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExportarCotacaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbPesquisaCotacao, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtPesquisaCotacao, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnPesquisarCotacao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnExportarCotacao)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtPesquisaCotacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnExportarCotacao)
                    .addComponent(jbtnPesquisarCotacao)
                    .addComponent(jcbPesquisaCotacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtabCotacao.addTab("Listagem", jPanel11);

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel6.setText("Código");

        jtxtCotacaoCodigo.setEditable(false);

        jLabel4.setText("Validade");

        try {
            jtxtCotacaoValidade.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel5.setText("Fornecedor");

        jcbCotacaoFornecedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Total");

        jtxtCotacaoTotal.setEditable(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtCotacaoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtCotacaoValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtCotacaoTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbCotacaoFornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(257, 257, 257))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxtCotacaoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jtxtCotacaoValidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jtxtCotacaoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbCotacaoFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jLabel7.setText("Produtos");

        jcbCotacaoProdutos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbCotacaoProdutosItemStateChanged(evt);
            }
        });

        jLabel8.setText("Valor");

        jtxtCotacaoValorProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));

        jtblCotacaoProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Produto", "Valor"
            }
        ));
        jtblCotacaoProduto.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(jtblCotacaoProduto);

        jbtnIncluirProduto.setText("incluir");
        jbtnIncluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIncluirProdutoActionPerformed(evt);
            }
        });

        jbtnExcluirProduto.setText("Excluir");
        jbtnExcluirProduto.setEnabled(false);
        jbtnExcluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExcluirProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbCotacaoProdutos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtCotacaoValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnIncluirProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnExcluirProduto)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbCotacaoProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jtxtCotacaoValorProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnIncluirProduto)
                    .addComponent(jbtnExcluirProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtabCotacao.addTab("Cadastro", jPanel6);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabCotacao)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtabCotacao)
                .addContainerGap())
        );

        jtabPrincipal.addTab("Cotações", jPanel5);

        jbtnNovo.setText("Novo");
        jbtnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNovoActionPerformed(evt);
            }
        });

        jbtnEditar.setText("Editar");
        jbtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditarActionPerformed(evt);
            }
        });

        jbtnSalvar.setText("Salvar");
        jbtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarActionPerformed(evt);
            }
        });

        jbtnCancelar.setText("Cancelar");
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtnCancelar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnNovo)
                    .addComponent(jbtnEditar)
                    .addComponent(jbtnSalvar)
                    .addComponent(jbtnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jtabPrincipal, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtabPrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNovoActionPerformed
        switch (jtabPrincipal.getSelectedIndex()) {
            case 0:
                novoProduto();
                break;
            case 1:
                novaCotacao();
                break;
        }
    }//GEN-LAST:event_jbtnNovoActionPerformed

    private void jbtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarActionPerformed
        switch (jtabPrincipal.getSelectedIndex()) {
            case 0:
                cadastrarProduto();
                break;
            case 1:
                cadastrarCotacao();
                break;
        }
    }//GEN-LAST:event_jbtnSalvarActionPerformed

    private void jbtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditarActionPerformed
        switch (jtabPrincipal.getSelectedIndex()) {
            case 0:
                editarProduto();
                break;
            case 1:
                editarCotacao();
                break;
        }
    }//GEN-LAST:event_jbtnEditarActionPerformed

    private void jbtnPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPesquisarProdutoActionPerformed
        try {
            if (!("").equals(jtxtPesquisaProduto.getText())) {
                
                String filtro = jtxtPesquisaProduto.getText();
                
                switch (jcbPesquisaProduto.getSelectedIndex()) {
                    case 0:
                        dataSourceProdutos = produtoRepository.findById(Integer.parseInt(jtxtPesquisaProduto.getText().trim()));
                        break;
                    case 1:
                        dataSourceProdutos = produtoRepository.findByDescricaoIgnoreCaseContaining(jtxtPesquisaProduto.getText());
                        break;
                    case 2:
                        dataSourceProdutos = produtoRepository.findBySituacaoIgnoreCaseContaining(jtxtPesquisaProduto.getText());
                        break;
                    default:
                        dataSourceProdutos = (List<Produto>) produtoRepository.findAll();
                }
            } else {
                dataSourceProdutos = (List<Produto>) produtoRepository.findAll();
            }

            preencherTableProdutos(dataSourceProdutos);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Código do produto inválido.", "ACME", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro inesperado. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnPesquisarProdutoActionPerformed

    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
        modificarEstado(MODO_LISTAGEM);
        limparCadastroProduto();
    }//GEN-LAST:event_jbtnCancelarActionPerformed

    private void jtabCotacaoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jtabCotacaoStateChanged


    }//GEN-LAST:event_jtabCotacaoStateChanged

    private void jtabPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtabPrincipalMouseClicked
        Iterable<Produto> produtos = produtoRepository.findAll();

        jcbCotacaoProdutos.removeAllItems();

        for (Produto produto : produtos) {
            jcbCotacaoProdutos.addItem(produto);
        }
    }//GEN-LAST:event_jtabPrincipalMouseClicked

    private void jbtnPesquisarCotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPesquisarCotacaoActionPerformed
        try {
            if (!("").equals(jtxtPesquisaCotacao.getText())) {
                switch (jcbPesquisaCotacao.getSelectedIndex()) {
                    case 0:
                        dataSourceCotacoes = (List<Cotacao>) cotacaoRepository.findById(Integer.parseInt(jtxtPesquisaCotacao.getText().trim()));
                        break;
                    case 1:
                        dataSourceCotacoes = cotacaoRepository.findByFornecedorIgnoreCaseContaining(jtxtPesquisaCotacao.getText());
                        break;
                    default:
                        dataSourceCotacoes = (List<Cotacao>) cotacaoRepository.findAll();
                }
            } else {
                dataSourceCotacoes = (List<Cotacao>) cotacaoRepository.findAll();
            }

            preencherTableCotacao(dataSourceCotacoes);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Código do produto inválido.", "ACME", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro inesperado. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnPesquisarCotacaoActionPerformed

    private void jbtnExportarCotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExportarCotacaoActionPerformed
        if (dataSourceCotacoes != null && dataSourceCotacoes.size() > 0) {
            try {
                cotacaoValidation.exportarCotacoes(dataSourceCotacoes);
                JOptionPane.showMessageDialog(null, "Cotaçoes exportada com sucesso.", "ACME", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Erro ao exportar dodos. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione as cotações para exportação.", "ACME", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtnExportarCotacaoActionPerformed

    private void jbtnExportacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExportacaoActionPerformed
        if (dataSourceProdutos != null && dataSourceProdutos.size() > 0) {
            try {
                produtoValidation.exportarProduto(dataSourceProdutos);
                JOptionPane.showMessageDialog(null, "Produtos exportado com sucesso.", "ACME", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Erro ao exportar dodos. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione os produtos para exportação.", "ACME", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jbtnExportacaoActionPerformed

    private void jbtnIncluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIncluirProdutoActionPerformed
        try {
            if (this.cotacaoProduto == null) {
                salvarCotacaoProduto();
            } else {
                alterarCotacaoProduto();
            }
            
            atualizarCotacao();

            int cotacaoId = Integer.parseInt(jtxtCotacaoCodigo.getText());
            preencherTableCotacaoProduto(cotacaoProdutoRepository.findByCotacaoId(cotacaoId));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao incluir produto na cotação. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnIncluirProdutoActionPerformed

    private void jcbCotacaoProdutosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbCotacaoProdutosItemStateChanged
        jtxtCotacaoValorProduto.requestFocus();
    }//GEN-LAST:event_jcbCotacaoProdutosItemStateChanged

    private void jbtnExcluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExcluirProdutoActionPerformed
        try {
            Object[] options = {"Sim", "Não"};
            int opcao = JOptionPane.showOptionDialog(null, "Deseja excluir o item selecionado?", "ACME", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);

            if (opcao == 0) {
                cotacaoProdutoRepository.deleteById(this.cotacaoProduto.getId());

                int cotacaoId = Integer.parseInt(jtxtCotacaoCodigo.getText());
                preencherTableCotacaoProduto(cotacaoProdutoRepository.findByCotacaoId(cotacaoId));

                atualizarTotalCotacao();

                jtxtCotacaoValorProduto.setText("");
                jtxtCotacaoValorProduto.setValue(null);
                
                this.cotacaoProduto = null;
                jbtnIncluirProduto.setText("Incluir");

                atualizarCotacao();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir produto da cotação. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbtnExcluirProdutoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JButton jbtnEditar;
    private javax.swing.JButton jbtnExcluirProduto;
    private javax.swing.JButton jbtnExportacao;
    private javax.swing.JButton jbtnExportarCotacao;
    private javax.swing.JButton jbtnIncluirProduto;
    private javax.swing.JButton jbtnNovo;
    private javax.swing.JButton jbtnPesquisarCotacao;
    private javax.swing.JButton jbtnPesquisarProduto;
    private javax.swing.JButton jbtnSalvar;
    private javax.swing.JComboBox<String> jcbCotacaoFornecedor;
    private javax.swing.JComboBox<Produto> jcbCotacaoProdutos;
    private javax.swing.JComboBox<String> jcbPesquisaCotacao;
    private javax.swing.JComboBox<String> jcbPesquisaProduto;
    private javax.swing.JComboBox<String> jcbSituacao;
    private javax.swing.JPanel jpnlProdutoCadastro;
    private javax.swing.JPanel jpnlProdutoListagem;
    private javax.swing.JTabbedPane jtabCotacao;
    private javax.swing.JTabbedPane jtabPrincipal;
    private javax.swing.JTabbedPane jtabProdutos;
    private javax.swing.JTable jtblCotacao;
    private javax.swing.JTable jtblCotacaoProduto;
    private javax.swing.JTable jtblProdutos;
    private javax.swing.JTextField jtxtCodigo;
    private javax.swing.JTextField jtxtCotacaoCodigo;
    private javax.swing.JTextField jtxtCotacaoTotal;
    private javax.swing.JFormattedTextField jtxtCotacaoValidade;
    private javax.swing.JFormattedTextField jtxtCotacaoValorProduto;
    private javax.swing.JTextField jtxtDescricao;
    private javax.swing.JTextField jtxtPesquisaCotacao;
    private javax.swing.JTextField jtxtPesquisaProduto;
    // End of variables declaration//GEN-END:variables

    private void preencherTableProdutos(List<Produto> produtos) {

        jtblProdutos.setModel(new DefaultTableModel(new Object[][]{}, new String[]{"Código", "Descrição", "Situação",}) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        DefaultTableModel model = (DefaultTableModel) jtblProdutos.getModel();
        model.setNumRows(0);

        jtblProdutos.getColumnModel().getColumn(0).setWidth(50);
        jtblProdutos.getColumnModel().getColumn(0).setHeaderValue("Código");
        jtblProdutos.getColumnModel().getColumn(1).setPreferredWidth(500);
        jtblProdutos.getColumnModel().getColumn(1).setHeaderValue("Descrição");
        jtblProdutos.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtblProdutos.getColumnModel().getColumn(2).setHeaderValue("Situação");

        if (produtos != null) {
            for (Produto produto : produtos) {
                model.addRow(new Object[]{
                    produto.getId(),
                    produto.getDescricao(),
                    produto.getSituacao()
                });
            }
        }
    }

    private void preencherTableCotacao(List<Cotacao> cotacoes) {

        jtblCotacao.setModel(new DefaultTableModel(new Object[][]{}, new String[]{"Código", "Fornecedor", "Data", "Validade", "Valor",}) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        DefaultTableModel model = (DefaultTableModel) jtblCotacao.getModel();
        model.setNumRows(0);

        jtblCotacao.getColumnModel().getColumn(0).setWidth(50);
        jtblCotacao.getColumnModel().getColumn(0).setCellRenderer(cotacaoValidation.alingTable("C"));

        jtblCotacao.getColumnModel().getColumn(1).setPreferredWidth(300);

        jtblCotacao.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtblCotacao.getColumnModel().getColumn(2).setCellRenderer(cotacaoValidation.alingTable("R"));

        jtblCotacao.getColumnModel().getColumn(3).setPreferredWidth(100);
        jtblCotacao.getColumnModel().getColumn(3).setCellRenderer(cotacaoValidation.alingTable("R"));

        jtblCotacao.getColumnModel().getColumn(4).setPreferredWidth(100);
        jtblCotacao.getColumnModel().getColumn(4).setCellRenderer(cotacaoValidation.alingTable("R"));

        if (cotacoes != null) {
            for (Cotacao cotacao : cotacoes) {
                model.addRow(new Object[]{
                    cotacao.getId(),
                    cotacao.getFornecedor(),
                    cotacaoValidation.formatarData(cotacao.getData()),
                    cotacao.getValidade() != null ? cotacaoValidation.formatarData(cotacao.getValidade()) : "",
                    cotacaoValidation.formatarMoeda(cotacao.getValorTotal())
                });
            }
        }
    }

    private void preencherTableCotacaoProduto(List<CotacaoProduto> produtos) {

        jtblCotacaoProduto.setModel(new DefaultTableModel(new Object[][]{}, new String[]{"Código", "Produto", "Valor",}) {
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });

        DefaultTableModel model = (DefaultTableModel) jtblCotacaoProduto.getModel();
        model.setNumRows(0);

        jtblCotacaoProduto.getColumnModel().getColumn(0).setWidth(50);
        jtblCotacaoProduto.getColumnModel().getColumn(1).setPreferredWidth(500);
        jtblCotacaoProduto.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtblCotacaoProduto.getColumnModel().getColumn(2).setCellRenderer(cotacaoValidation.alingTable("R"));

        if (produtos != null) {
            for (CotacaoProduto produto : produtos) {
                model.addRow(new Object[]{
                    produto.getProduto().getId(),
                    produto.getProduto().getDescricao(),
                    cotacaoValidation.formatarMoeda(produto.getValorProuto())
                });
            }
        }
    }

    public boolean isCellEditable() {
        return false;
    }

    private void cadastrarProduto() {
        try {
            Produto produto = new Produto();
            produto.setId("".equals(jtxtCodigo.getText()) ? 0 : Integer.parseInt(jtxtCodigo.getText()));
            produto.setDescricao(jtxtDescricao.getText());
            produto.setSituacao(jcbSituacao.getSelectedItem().toString());

            produtoValidation.validar(produto);

            int codigo = produtoRepository.save(produto).getId();

            JOptionPane.showMessageDialog(null, "Produto salvo com sucesso.", "ACME", JOptionPane.INFORMATION_MESSAGE);

            preencherTableProdutos((List<Produto>) produtoRepository.findById(codigo));

            modificarEstado(MODO_LISTAGEM);
        } catch (ProdutoInvalidoException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "ACME", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro inesperado. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void cadastrarCotacao() {
        try {
            Cotacao cotacao = new Cotacao();
            cotacao.setId("".equals(jtxtCotacaoCodigo.getText()) ? 0 : Integer.parseInt(jtxtCotacaoCodigo.getText()));
            cotacao.setData(new Date());
            cotacao.setValidade(cotacaoValidation.formatarDate(jtxtCotacaoValidade.getText()));
            String valor = jtxtCotacaoTotal.getText().replace(".", "").replace(",", ".");
            cotacao.setValorTotal(Double.parseDouble(valor));
            cotacao.setFornecedor(jcbCotacaoFornecedor.getSelectedItem().toString());

            cotacaoValidation.validar(cotacao);

            cotacaoRepository.save(cotacao);

            JOptionPane.showMessageDialog(null, "Cotação cadastrada com sucesso.", "ACME", JOptionPane.INFORMATION_MESSAGE);

            preencherTableCotacao((List<Cotacao>) cotacaoRepository.findAll());

            modificarEstado(MODO_LISTAGEM);

        } catch (CotacaoInvalidaException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "ACME", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro inesperado. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void novoProduto() {
        modificarEstado(MODO_CADASTRO);
    }

    private void novaCotacao() {

        try {
            Cotacao cotacao = new Cotacao();
            cotacao.setData(new Date());
            cotacao.setValorTotal(0.0);

            Integer codigo = cotacaoRepository.save(cotacao).getId();

            jtxtCotacaoCodigo.setText(codigo.toString());
            jtxtCotacaoTotal.setText(cotacaoValidation.formatarMoeda(cotacao.getValorTotal()));

            modificarEstado(MODO_CADASTRO);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao iniciar cotação. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void editarProduto() {
        int linha = jtblProdutos.getSelectedRow(); // retorna a linha selecionada pelo usuario

        if (linha >= 0) {
            jtxtCodigo.setText(jtblProdutos.getValueAt(linha, 0).toString()); // retorna o valor da celula linha X 0
            jtxtDescricao.setText(jtblProdutos.getValueAt(linha, 1).toString()); // retorna o valor da celula linha X 1
            jcbSituacao.setSelectedItem(jtblProdutos.getValueAt(linha, 2).toString()); // retorna o valor da celula linha X 2

            modificarEstado(MODO_CADASTRO);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione o produto para poder editar.", "ACME", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void editarCotacao() {
        int linha = jtblCotacao.getSelectedRow();

        if (linha >= 0) {
            try {
                int codigo = Integer.parseInt(jtblCotacao.getValueAt(linha, 0).toString());
                Cotacao cotacao = cotacaoRepository.findById(codigo).get(0);

                jtxtCotacaoCodigo.setText(cotacao.getId().toString());
                if (cotacao.getValidade() != null) {
                    jtxtCotacaoValidade.setText(cotacaoValidation.formatarData(cotacao.getValidade()));
                }
                jcbCotacaoFornecedor.setSelectedItem(cotacao.getFornecedor());
                jtxtCotacaoTotal.setText(cotacaoValidation.formatarMoeda(cotacao.getValorTotal()));

                dataSourceCotacaoProduto = cotacaoProdutoRepository.findByCotacaoId(cotacao.getId());

                preencherTableCotacaoProduto(dataSourceCotacaoProduto);

                modificarEstado(MODO_CADASTRO);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao editar cotação", "ACME", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }

    //ESTADOS DA TELA
    private void modificarEstado(boolean estado) {
        jbtnEditar.setEnabled(!estado);
        jbtnNovo.setEnabled(!estado);

        jbtnSalvar.setEnabled(estado);
        jbtnCancelar.setEnabled(estado);

        if (jtabPrincipal.getSelectedIndex() == TAB_PRODUTO) {
            if (estado == MODO_CADASTRO) {
                jtabProdutos.setSelectedIndex(1);
                jtxtDescricao.requestFocus();
            } else {
                jtabProdutos.setSelectedIndex(0);
                limparCadastroProduto();
            }
        } else {
            if (estado == MODO_CADASTRO) {
                jtabCotacao.setSelectedIndex(1);
                jtxtCotacaoValidade.requestFocus();
            } else {
                jtabCotacao.setSelectedIndex(0);
                limparCadastroCotacao();
                limparTabelaCotacaoProduto();
            }
        }
    }

    private void limparCadastroProduto() {
        jtxtCodigo.setText("");
        jtxtDescricao.setText("");
        jcbSituacao.setSelectedIndex(0);
    }

    private void limparCadastroCotacao() {
        jtxtCotacaoCodigo.setText("");
        jtxtCotacaoValidade.setText("");
        jtxtCotacaoValidade.setValue(null);
        jcbCotacaoProdutos.setSelectedIndex(0);
        jcbCotacaoFornecedor.setSelectedIndex(0);
        jtxtCotacaoValorProduto.setText("");
    }

    private void carregarFornecedores() {
        String[] fornecedores = {"Fornecedor 01", "Fornecedor 02", "Fornecedor 03", "Fornecedor 04"};

        jcbCotacaoFornecedor.removeAllItems();

        for (int i = 0; i < fornecedores.length; i++) {
            jcbCotacaoFornecedor.addItem(fornecedores[i]);
        }
    }

    private void limparTabelaCotacaoProduto() {
        DefaultTableModel modelo = (DefaultTableModel) jtblCotacaoProduto.getModel();
        modelo.setNumRows(0);
    }

    private void editarCotacaoProduto() {
        jtblCotacaoProduto.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int linha = jtblCotacaoProduto.getSelectedRow();
                    Integer codigo = Integer.parseInt(jtblCotacaoProduto.getValueAt(linha, 0).toString());
                    Produto produto = produtoRepository.findById(codigo).get(0);

                    int cotacaoId = Integer.parseInt(jtxtCotacaoCodigo.getText());

                    cotacaoProduto = cotacaoProdutoRepository.findByCotacaoIdAndProdutoId(cotacaoId, codigo);

                    atualizarTotalCotacao();

                    jcbCotacaoProdutos.getModel().setSelectedItem(produto);
                    jtxtCotacaoValorProduto.setText(jtblCotacaoProduto.getValueAt(linha, 2).toString());

                    jbtnIncluirProduto.setText("Alterar");
                    jbtnExcluirProduto.setEnabled(true);
                }
            }
        });
    }

    private void salvarCotacaoProduto() {
        Produto produto = (Produto) jcbCotacaoProdutos.getSelectedItem();
        int cotacaoId = Integer.parseInt(jtxtCotacaoCodigo.getText());

        CotacaoProduto cotacaoProduto = cotacaoProdutoRepository.findByCotacaoIdAndProdutoId(cotacaoId, produto.getId());

        if (cotacaoProduto == null) {
            if (!("").equals(jtxtCotacaoValorProduto.getText().trim())) {
                cotacaoProduto = new CotacaoProduto();
                Cotacao cotacao = cotacaoRepository.findById(cotacaoId).get(0);
                cotacaoProduto.setCotacao(cotacao);
                cotacaoProduto.setProduto(produto);
                String valor = jtxtCotacaoValorProduto.getText().replace(".", "").replace(",", ".");
                cotacaoProduto.setValorProuto(Double.parseDouble(valor));

                cotacaoProdutoRepository.save(cotacaoProduto);

                atualizarTotalCotacao();

                jtxtCotacaoValorProduto.setText("");
                jtxtCotacaoValorProduto.setValue(null);
                jbtnExcluirProduto.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(null, "Informe o valor do produto.", "ACME", JOptionPane.WARNING_MESSAGE);
                jtxtCotacaoValorProduto.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Produto já incluido na cotação.", "ACME", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void alterarCotacaoProduto() {
        try {
            String valor = jtxtCotacaoValorProduto.getText().replace(".", "").replace(",", ".");
            this.cotacaoProduto.setValorProuto(Double.parseDouble(valor));

            cotacaoProdutoRepository.save(this.cotacaoProduto);

            int cotacaoId = Integer.parseInt(jtxtCotacaoCodigo.getText());
            dataSourceCotacaoProduto = cotacaoProdutoRepository.findByCotacaoId(cotacaoId);

            atualizarTotalCotacao();

            jtxtCotacaoValorProduto.setText("");
            jtxtCotacaoValorProduto.setValue(null);

            this.cotacaoProduto = null;
            jbtnIncluirProduto.setText("Incluir");
            jbtnExcluirProduto.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao editar produto. \nDetalhe: " + e.getMessage(), "ACME", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void atualizarTotalCotacao() {
        double valorTotal = 0;

        int cotacaoId = Integer.parseInt(jtxtCotacaoCodigo.getText());
        this.dataSourceCotacaoProduto = cotacaoProdutoRepository.findByCotacaoId(cotacaoId);

        for (CotacaoProduto dataSourceCotacoe : dataSourceCotacaoProduto) {
            valorTotal += dataSourceCotacoe.getValorProuto();
        }

        jtxtCotacaoTotal.setText(cotacaoValidation.formatarMoeda(valorTotal));
    }

    private void atualizarCotacao() throws ParseException, Exception {
        Cotacao cotacao = new Cotacao();
        cotacao.setId("".equals(jtxtCotacaoCodigo.getText()) ? 0 : Integer.parseInt(jtxtCotacaoCodigo.getText()));
        cotacao.setData(new Date());
        cotacao.setValidade(cotacaoValidation.formatarDate(jtxtCotacaoValidade.getText()));
        String valor = jtxtCotacaoTotal.getText().replace(".", "").replace(",", ".");
        cotacao.setValorTotal(Double.parseDouble(valor));
        cotacao.setFornecedor(jcbCotacaoFornecedor.getSelectedItem().toString());

        cotacaoValidation.validar(cotacao);

        cotacaoRepository.save(cotacao);
        
        preencherTableCotacao((List<Cotacao>) cotacaoRepository.findAll());
    }

}
